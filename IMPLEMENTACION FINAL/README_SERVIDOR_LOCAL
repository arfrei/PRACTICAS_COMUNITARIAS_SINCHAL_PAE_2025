En esta integracion final se ha modificado el servidor en Raspberry Pi 3 a lo siguiente:

--BROKER MQTT MOSQUITTO--
1) Genera un Broker MQTT en Mosquitto con una ip fija.
2) Recibe datos por MQTT en dos topics (nivel y presion).
3) Existe un servicio en systemd que habilita el broker de manera automatica

--BASE DE DATOS MARIADB--
1) Tiene un sistema de base de datos
2) Se ha creado una base de datos "sensores" donde se almacena nivel y presion con la hora exacta de envio
3) Hay usuarios y contrase√±as que se podrian utilizar a futuro por seguridad
4) Existe un servicio en systemd que habilita la base de datos de manera automatica

--INTEGRACION MQTT Y BASE DE DATOS--
1) Mediante un script en python se insertan los datos de MQTT a la base de datos de forma ordenada
2) Existe un servicio en systemd que habilita esta integracion de manera automatica

--LIMPIEZA AUTOMATICA DE BASE DE DATOS--
1) Mediante un cron job (y su archivo de conf) se limpia por completo la base de datos en un plazo de 30 dias (puede modificarse)
NOTA: Esto se realiza de manera automatica

--GRAFANA SERVER--
1) Se ha creado un servidor en grafana de manera local
2) Se ha enlazado este servidor con la base de datos local en mariadb
3) Se ha creado un dashboard para nivel y presion (puede modificarse para mejor presentacion)
4) Existe un servicio en systemd que habilita esto de manera automatica

--FALLA DE INTERNET EN EL SERVIDOR--
1) Mediante un script en python se inserta un valor distintivo (-45) en la base de datos si se pierde la conexion al internet en la raspberry
2) Existe un servicio en systemd que habilita esto de manera automatica
NOTA: En este caso la url de ngrok no se ve cambiada al restaurarse la conexion

--DESCONEXION DEL SERVIDOR--
1) Mediante un script en python se inserta un valor distintivo (-66) en la base de datos si se desconecta-reinicia la raspberry
2) Existe un servicio en systemd que habilita esto de manera automatica

NOTA: La razon por la cual se elimino la parte de Ngrok, es debido a que se considero mejor utilizar a ThingSpeak (u otra plataforma IoT) como servidor remoto. 
Y mantener a grafana como un monitoreo local.
